{
  "openapi": "3.0.3",
  "info": {
    "version": "0.0.1",
    "title": "Petly API 1.0",
    "description": "back-end API for [Our finaly project ](https://viacheslav-tykhovlis.github.io/petly-site)",
    "contact": {
      "email": "Petly@petly.click"
    }
  },
  "servers": [
    {
      "url": "https://petly-site-back.up.railway.app"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Auth"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created \"Successful operation\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "201",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "description",
                      "example": "success"
                    },
                    "code": {
                      "type": "string",
                      "description": "description",
                      "example": 201
                    },
                    "user": {
                      "type": "object",
                      "description": "description",
                      "example": {
                        "email": "userEmail"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "title": "400",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "description",
                      "example": "Invalid value of email or password"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "title": "409",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "description",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/change": {
      "post": {
        "tags": ["Auth"],
        "summary": "User change",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "change's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created \"Successful operation\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "201",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "description",
                      "example": "success"
                    },
                    "code": {
                      "type": "string",
                      "description": "description",
                      "example": 201
                    },
                    "user": {
                      "type": "object",
                      "description": "description",
                      "example": {
                        "email": "userEmail"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "title": "400",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "description",
                      "example": "Invalid value of email or password"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "title": "409",
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "description",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Auth"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK \"Successful operation\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "200",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "description",
                      "example": "success"
                    },
                    "code": {
                      "type": "string",
                      "description": "description",
                      "example": 200
                    },
                    "accessToken": {
                      "type": "string",
                      "description": "description",
                      "example": "token"
                    },
                    "user": {
                      "type": "object",
                      "description": "description",
                      "example": {
                        "email": "userEmail"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request \"validate error\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "400",
                  "type": "object",
                  "example": {
                    "message": "Wrong email or password"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (one of the \"message\")",
            "content": {
              "application/json": {
                "schema": {
                  "title": "401",
                  "type": "object",
                  "example": [
                    {
                      "message": "Email or password is wrong"
                    },
                    {
                      "message": "Your Email is not verifyied!"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "204": {
            "description": "No Content \"Successful operation\"",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/servicessidebar": {
      "get": {
        "tags": ["services"],
        "summary": "Get services provided",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Information about the services provided",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK \"Successful operation\" (array of objects)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/petSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/news": {
      "get": {
        "tags": ["services"],
        "summary": "Get news",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "The latest news in the animal world",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK \"Successful operation\" (array of objects)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/petSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/about": {
      "get": {
        "tags": ["user"],
        "summary": "Get personal information about the user",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "All spersonal information about the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK \"Successful operation\" (array of objects)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/petSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/aboutuserPets": {
      "get": {
        "tags": ["user"],
        "summary": "Get all information about the user's animals",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "information about the user's animals, from the pets collection",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK \"Successful operation\" (array of objects)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/petSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": ["pets"],
        "summary": "getting all cards with the user's animals",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "An endpoint for getting all cards with the user's animals",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK \"Successful operation\" (array of objects)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/petSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pet": {
      "get": {
        "tags": ["pets"],
        "summary": "adding a user animal card",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "An endpoint for adding a user animal card",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK \"Successful operation\" (array of objects)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/petSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/:petId": {
      "delete": {
        "tags": ["pets"],
        "summary": "deleting the card with the user's animal",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "An endpoint deleting the card with the user's animal",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK \"Successful operation\" (array of objects)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/petSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/noticesByTitle": {
      "get": {
        "tags": ["notices"],
        "summary": "Searching noties by title",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "An endpoint for searching ads by title collection",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK \"Successful operation\" (array of objects)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/petSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/noticesByCategory": {
      "get": {
        "tags": ["notices"],
        "summary": "Receiving noties by category",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Endpoint for receiving ads by category collection",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK \"Successful operation\" (array of objects)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/petSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notices": {
      "get": {
        "tags": ["notices"],
        "summary": "Adding noties to the selected category",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Adding ads according to the selected category",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK \"Successful operation\" (array of objects)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/petSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/:noticesId": {
      "delete": {
        "tags": ["notices"],
        "summary": "deleting noties of an authorized user",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "An endpoint for deleting an authorized user's ad created by the same user collection",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK \"Successful operation\" (array of objects)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/petSchema"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "500",
                  "type": "object",
                  "example": {
                    "message": "error description"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "petSchema": {
        "type": "object",
        "required": ["name", "phone", "theSex", "place"],
        "properties": {
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string"
          },
          "breed": {
            "type": "string"
          },
          "place": {
            "type": "string"
          },
          "theSex": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "price": {
            "type": "number"
          }
        }
      },
      "User": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "example": "puh"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "Birthday": {
            "type": "number"
          },
          "Phone": {
            "type": "number"
          },
          "City": {
            "type": "string"
          },
          "avatarUrl": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          },
          "userLikePets": {
            "items": {
              "type": "object",
              "properties": {
                "pet_id": {
                  "type": "string",
                  "example": "6419a948e7def16fccb72eb4"
                }
              }
            }
          },
          "userOwnerPets": {
            "items": {
              "type": "object",
              "properties": {
                "pet_id": {
                  "type": "string",
                  "example": "6419a948e7def16fccb72eb4"
                }
              }
            }
          },
          "userAddPet": {
            "items": {
              "type": "object",
              "properties": {
                "pete_id": {
                  "type": "string",
                  "example": "6419a948e7def16fccb72eb4"
                }
              }
            }
          }
        }
      },
      "Auth": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
